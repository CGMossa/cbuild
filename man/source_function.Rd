% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function.R
\name{source_function}
\alias{source_function}
\title{Source a single C function}
\usage{
source_function(x, includes = NULL, no_remap = TRUE, show = FALSE)
}
\arguments{
\item{x}{\code{[character(1)]}

A block of code containing a single C function to compile.}

\item{includes}{\code{[NULL / character()]}

Extra includes to add manually. By default, \code{R.h} and \code{Rinternals.h} are
included. Specify more includes with their file name. For example, to
include \code{#include <Rdefines.h>} you just need to specify \code{"Rdefines.h"}.}

\item{no_remap}{\code{[logical(1)]}

Should \code{#define R_NO_REMAP} be defined?}

\item{show}{\code{[logical(1)]}

Should the output of compiling the source code with \code{R CMD SHLIB} be shown?}
}
\value{
An R function that calls the compiled C code.
}
\description{
\code{source_function()} is the most basic way to source a C function to the R
side. It sources a single C function and exports it on the R side. There
is no need to include the \code{// [[ export ]]} tag when
using \code{source_function()}, since only one function will be exported.
}
\examples{
code <- "
  SEXP fn(SEXP x) {
    return x;
  }
"

fn <- source_function(code)

fn(1)
}
